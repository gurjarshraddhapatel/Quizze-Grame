{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Quizze-Grame-10\\\\frontend\\\\src\\\\components\\\\Createquiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport styles from \"../styles/createquiz.module.css\";\nimport cross from \"../assets/cross.png\";\nimport plus from \"../assets/plus.png\";\nimport Typetext from \"./Typetext\";\nimport TypeURL from \"./TypeURL\";\nimport TypetextandURL from \"./TypetextandURL\";\nimport toast from \"react-hot-toast\";\nimport axios from \"axios\";\nimport { quizServer } from \"../App\";\nimport { Context } from \"..\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Createquiz = ({\n  quizId,\n  setQuizID,\n  getLink,\n  setGetLink,\n  setAnalytics,\n  setDashboard,\n  setCreateQuiz,\n  quizName,\n  quizType,\n  setQuizType\n}) => {\n  _s();\n  var _questions$currentInd3, _questions$currentInd4, _questions$currentInd5;\n  const [questions, setQuestions] = useState([{\n    question: \"\",\n    optionType: \"\",\n    options: [\"\", \"\"],\n    correctAnswer: null\n  }]);\n  const {\n    loading,\n    setLoading\n  } = useContext(Context);\n  const [currentOptionType, setCurrentOptiontype] = useState(\"text\");\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(\"\");\n  const [currentOptions, setCurrentOptions] = useState([\"\"]);\n  const [correctAnswer, setCorrectAnswer] = useState(\"\");\n  const [options, setOptions] = useState([\"\", \"\"]);\n  const [count, setCount] = useState(1);\n  const [timer, setTimer] = useState(0);\n  const handleRemoveQuestion = index => {\n    var _newQuestions$newInde, _newQuestions$newInde2;\n    const newQuestions = [...questions];\n    newQuestions.splice(index, 1);\n    setQuestions(newQuestions);\n    setCount(count - 1);\n    let newIndex = currentIndex;\n    if (index === currentIndex) {\n      newIndex = Math.max(newQuestions.length - 1, 0);\n    } else if (index < currentIndex) {\n      newIndex = currentIndex - 1;\n    }\n    setCurrentIndex(newIndex);\n    setOptions(((_newQuestions$newInde = newQuestions[newIndex]) === null || _newQuestions$newInde === void 0 ? void 0 : _newQuestions$newInde.options) || [\"\", \"\"]);\n    setCorrectAnswer(((_newQuestions$newInde2 = newQuestions[newIndex]) === null || _newQuestions$newInde2 === void 0 ? void 0 : _newQuestions$newInde2.correctAnswer) || null);\n  };\n  const handleClickonCircle = index => {\n    setCurrentIndex(index);\n    let currentOptionType = questions[index].optionType;\n    if (currentOptionType === \"\") {\n      currentOptionType = \"text\";\n    }\n    setCurrentOptiontype(currentOptionType);\n  };\n  const handleAddQuestion = () => {\n    const newQuestion = {\n      question: \"\",\n      optionType: \"\",\n      options: [\"\", \"\"],\n      correctAnswer: \"\"\n    };\n    setQuestions([...questions, newQuestion]);\n    setCount(count + 1);\n    setCurrentIndex(count);\n    // setCurrentOptiontype(\"text\");\n  };\n  useEffect(() => {\n    var _questions$currentInd, _questions$currentInd2;\n    setCurrentQuestion(((_questions$currentInd = questions[currentIndex]) === null || _questions$currentInd === void 0 ? void 0 : _questions$currentInd.question) || \"\");\n    setCurrentOptions(((_questions$currentInd2 = questions[currentIndex]) === null || _questions$currentInd2 === void 0 ? void 0 : _questions$currentInd2.options) || [\"\"]);\n  }, [currentIndex, questions]);\n\n  // console.log(questions);\n  // console.log(currentOptionType);\n  const handleQuizCreation = async () => {\n    // Validation\n\n    let flag = true;\n    for (let i = 0; i < questions.length; i++) {\n      if (!questions[i].question.trim()) {\n        toast.error(`Question ${i + 1} is required`);\n        flag = false;\n        return;\n      }\n      if (!questions[i].optionType.trim()) {\n        toast.error(`Option type for question ${i + 1} is required`);\n        flag = false;\n        return;\n      }\n      if (questions[i].options.length < 2) {\n        toast.error(`Question ${i + 1} should have at least two options`);\n        flag = false;\n        return;\n      }\n      for (let j = 0; j < questions[i].options.length; j++) {\n        if (!questions[i].options[j].trim()) {\n          toast.error(`Option ${j + 1} for question ${i + 1} is required`);\n          flag = false;\n          return;\n        }\n      }\n      if (questions[i].correctAnswer === \"\" || questions[i].correctAnswer === null) {\n        toast.error(`Correct answer for question ${i + 1} is required`);\n        flag = false;\n        return;\n      }\n    }\n    const obj = {\n      quizName: quizName,\n      quizType: quizType,\n      questions: questions,\n      timer: timer\n    };\n    // console.log(obj);\n    if (flag === true) {\n      setLoading(true);\n      try {\n        const {\n          data\n        } = await axios.post(`http://localhost:4000/api/v1/quiz/create-quiz`, obj, {\n          withCredentials: true,\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        setQuizID(data.quizId);\n        setLoading(false);\n        toast.success(data.message);\n        setCreateQuiz(false);\n        setAnalytics(true);\n        setGetLink(true);\n      } catch (error) {\n        console.error(error);\n        toast.error(\"An error occurred while creating the quiz\");\n        setLoading(false);\n        setDashboard(true);\n        setCreateQuiz(false);\n      }\n    }\n  };\n  const obj = {\n    quizName: quizName,\n    quizType: quizType,\n    questions: questions,\n    timer: timer\n  };\n  // console.log(obj);\n  // console.log(quizType);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.popup_2,\n    onClick: e => e.stopPropagation(),\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.section_1,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.circleAndPlus,\n        children: [Array.from({\n          length: count\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleClickonCircle(index),\n          className: `${styles.circle} ${index === currentIndex ? styles.border : \"\"}`,\n          children: [index + 1, count === 1 ? null : /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: e => {\n              e.stopPropagation();\n              handleRemoveQuestion(index);\n              handleClickonCircle(Math.max(index - 1, 0));\n            },\n            src: cross,\n            alt: \"cross img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)), count >= 5 ? null : /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: handleAddQuestion,\n          src: plus,\n          alt: \"add img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Max 5 questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.section_2,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          const newQuestions = [...questions];\n          newQuestions[currentIndex].question = e.target.value;\n          setQuestions(newQuestions);\n        },\n        value: questions[currentIndex] ? questions[currentIndex].question : \"\",\n        type: \"text\",\n        name: \"poll question\",\n        placeholder: \"Poll Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.optionType,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Option Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"option\",\n            value: \"text\",\n            checked: ((_questions$currentInd3 = questions[currentIndex]) === null || _questions$currentInd3 === void 0 ? void 0 : _questions$currentInd3.optionType) === \"text\",\n            onChange: () => {\n              setCurrentOptiontype(\"text\");\n              const newQuestions = [...questions];\n              newQuestions[currentIndex].optionType = \"text\";\n              setQuestions(newQuestions);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"option\",\n            value: \"url\",\n            checked: ((_questions$currentInd4 = questions[currentIndex]) === null || _questions$currentInd4 === void 0 ? void 0 : _questions$currentInd4.optionType) === \"url\",\n            onChange: () => {\n              setCurrentOptiontype(\"url\");\n              const newQuestions = [...questions];\n              newQuestions[currentIndex].optionType = \"url\";\n              setQuestions(newQuestions);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"option\",\n            value: \"textandurl\",\n            checked: ((_questions$currentInd5 = questions[currentIndex]) === null || _questions$currentInd5 === void 0 ? void 0 : _questions$currentInd5.optionType) === \"textandurl\",\n            onChange: () => {\n              setCurrentOptiontype(\"textandurl\");\n              const newQuestions = [...questions];\n              newQuestions[currentIndex].optionType = \"textandurl\";\n              setQuestions(newQuestions);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Text & Image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.section_3,\n      children: [currentOptionType === \"text\" && /*#__PURE__*/_jsxDEV(Typetext, {\n        questions: questions,\n        setQuestions: setQuestions,\n        currentIndex: currentIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), currentOptionType === \"url\" && /*#__PURE__*/_jsxDEV(TypeURL, {\n        questions: questions,\n        setQuestions: setQuestions,\n        currentIndex: currentIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), currentOptionType === \"textandurl\" && /*#__PURE__*/_jsxDEV(TypetextandURL, {\n        questions: questions,\n        setQuestions: setQuestions,\n        currentIndex: currentIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), quizType === \"Q&A\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.timer,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.text,\n        children: \"Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: timer === 0 ? \"#D60000\" : \"white\",\n          color: timer === 0 ? \"white\" : \"#9F9F9F\"\n        },\n        onClick: () => setTimer(0),\n        children: \"OFF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: timer === 5 ? \"#D60000\" : \"white\",\n          color: timer === 5 ? \"white\" : \"#9F9F9F\"\n        },\n        onClick: () => setTimer(5),\n        children: \"5 sec\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: timer === 10 ? \"#D60000\" : \"white\",\n          color: timer === 10 ? \"white\" : \"#9F9F9F\"\n        },\n        onClick: () => setTimer(10),\n        children: \"10 sec\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.section_4,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cancelContinue,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.cancelbtn,\n          onClick: () => {\n            setDashboard(true);\n            setCreateQuiz(false);\n            setQuizType(\"Q&A\");\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: loading,\n          className: styles.continuebtn,\n          onClick: handleQuizCreation,\n          children: loading ? \"Wait...\" : \"Create Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(Createquiz, \"rr9XjVaRsquZYDnHLJyaFg8/xM4=\");\n_c = Createquiz;\nexport default Createquiz;\nvar _c;\n$RefreshReg$(_c, \"Createquiz\");","map":{"version":3,"names":["React","useState","useEffect","useContext","styles","cross","plus","Typetext","TypeURL","TypetextandURL","toast","axios","quizServer","Context","jsxDEV","_jsxDEV","Createquiz","quizId","setQuizID","getLink","setGetLink","setAnalytics","setDashboard","setCreateQuiz","quizName","quizType","setQuizType","_s","_questions$currentInd3","_questions$currentInd4","_questions$currentInd5","questions","setQuestions","question","optionType","options","correctAnswer","loading","setLoading","currentOptionType","setCurrentOptiontype","currentIndex","setCurrentIndex","currentQuestion","setCurrentQuestion","currentOptions","setCurrentOptions","setCorrectAnswer","setOptions","count","setCount","timer","setTimer","handleRemoveQuestion","index","_newQuestions$newInde","_newQuestions$newInde2","newQuestions","splice","newIndex","Math","max","length","handleClickonCircle","handleAddQuestion","newQuestion","_questions$currentInd","_questions$currentInd2","handleQuizCreation","flag","i","trim","error","j","obj","data","post","withCredentials","headers","success","message","console","className","popup_2","onClick","e","stopPropagation","children","section_1","circleAndPlus","Array","from","map","_","circle","border","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","section_2","onChange","target","value","type","name","placeholder","checked","section_3","text","style","backgroundColor","color","section_4","cancelContinue","cancelbtn","disabled","continuebtn","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Quizze-Grame-10/frontend/src/components/Createquiz.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport styles from \"../styles/createquiz.module.css\";\r\nimport cross from \"../assets/cross.png\";\r\nimport plus from \"../assets/plus.png\";\r\nimport Typetext from \"./Typetext\";\r\nimport TypeURL from \"./TypeURL\";\r\nimport TypetextandURL from \"./TypetextandURL\";\r\nimport toast from \"react-hot-toast\";\r\nimport axios from \"axios\";\r\nimport { quizServer } from \"../App\";\r\nimport { Context } from \"..\";\r\n\r\nconst Createquiz = ({\r\n  quizId,\r\n  setQuizID,\r\n  getLink,\r\n  setGetLink,\r\n  setAnalytics,\r\n  setDashboard,\r\n  setCreateQuiz,\r\n  quizName,\r\n  quizType,\r\n  setQuizType,\r\n}) => {\r\n  const [questions, setQuestions] = useState([\r\n    { question: \"\", optionType: \"\", options: [\"\", \"\"], correctAnswer: null },\r\n  ]);\r\n  const { loading, setLoading } = useContext(Context);\r\n  const [currentOptionType, setCurrentOptiontype] = useState(\"text\");\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState(\"\");\r\n  const [currentOptions, setCurrentOptions] = useState([\"\"]);\r\n  const [correctAnswer, setCorrectAnswer] = useState(\"\");\r\n  const [options, setOptions] = useState([\"\", \"\"]);\r\n  const [count, setCount] = useState(1);\r\n  const [timer, setTimer] = useState(0);\r\n\r\n  const handleRemoveQuestion = (index) => {\r\n    const newQuestions = [...questions];\r\n    newQuestions.splice(index, 1);\r\n    setQuestions(newQuestions);\r\n    setCount(count - 1);\r\n\r\n    let newIndex = currentIndex;\r\n    if (index === currentIndex) {\r\n      newIndex = Math.max(newQuestions.length - 1, 0);\r\n    } else if (index < currentIndex) {\r\n      newIndex = currentIndex - 1;\r\n    }\r\n    setCurrentIndex(newIndex);\r\n\r\n    setOptions(newQuestions[newIndex]?.options || [\"\", \"\"]);\r\n    setCorrectAnswer(newQuestions[newIndex]?.correctAnswer || null);\r\n  };\r\n\r\n  const handleClickonCircle = (index) => {\r\n    setCurrentIndex(index);\r\n    let currentOptionType = questions[index].optionType;\r\n\r\n    if (currentOptionType === \"\") {\r\n      currentOptionType = \"text\";\r\n    }\r\n\r\n    setCurrentOptiontype(currentOptionType);\r\n  };\r\n\r\n  const handleAddQuestion = () => {\r\n    const newQuestion = {\r\n      question: \"\",\r\n      optionType: \"\",\r\n      options: [\"\", \"\"],\r\n      correctAnswer: \"\",\r\n    };\r\n    setQuestions([...questions, newQuestion]);\r\n    setCount(count + 1);\r\n    setCurrentIndex(count);\r\n    // setCurrentOptiontype(\"text\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentQuestion(questions[currentIndex]?.question || \"\");\r\n    setCurrentOptions(questions[currentIndex]?.options || [\"\"]);\r\n  }, [currentIndex, questions]);\r\n\r\n  // console.log(questions);\r\n  // console.log(currentOptionType);\r\n  const handleQuizCreation = async () => {\r\n    // Validation\r\n\r\n    let flag = true;\r\n    for (let i = 0; i < questions.length; i++) {\r\n      if (!questions[i].question.trim()) {\r\n        toast.error(`Question ${i + 1} is required`);\r\n        flag = false;\r\n        return;\r\n      }\r\n      if (!questions[i].optionType.trim()) {\r\n        toast.error(`Option type for question ${i + 1} is required`);\r\n        flag = false;\r\n        return;\r\n      }\r\n      if (questions[i].options.length < 2) {\r\n        toast.error(`Question ${i + 1} should have at least two options`);\r\n        flag = false;\r\n        return;\r\n      }\r\n      for (let j = 0; j < questions[i].options.length; j++) {\r\n        if (!questions[i].options[j].trim()) {\r\n          toast.error(`Option ${j + 1} for question ${i + 1} is required`);\r\n          flag = false;\r\n          return;\r\n        }\r\n      }\r\n      if (\r\n        questions[i].correctAnswer === \"\" ||\r\n        questions[i].correctAnswer === null\r\n      ) {\r\n        toast.error(`Correct answer for question ${i + 1} is required`);\r\n        flag = false;\r\n        return;\r\n      }\r\n    }\r\n\r\n    const obj = {\r\n      quizName: quizName,\r\n      quizType: quizType,\r\n      questions: questions,\r\n      timer: timer,\r\n    };\r\n    // console.log(obj);\r\n    if (flag === true) {\r\n      setLoading(true);\r\n      try {\r\n        const { data } = await axios.post(`http://localhost:4000/api/v1/quiz/create-quiz`, obj, {\r\n          withCredentials: true,\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        });\r\n\r\n        setQuizID(data.quizId);\r\n        setLoading(false);\r\n        toast.success(data.message);\r\n        setCreateQuiz(false);\r\n        setAnalytics(true);\r\n        setGetLink(true);\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.error(\"An error occurred while creating the quiz\");\r\n        setLoading(false);\r\n        setDashboard(true);\r\n        setCreateQuiz(false);\r\n      }\r\n    }\r\n  };\r\n  const obj = {\r\n    quizName: quizName,\r\n    quizType: quizType,\r\n    questions: questions,\r\n    timer: timer,\r\n  };\r\n  // console.log(obj);\r\n  // console.log(quizType);\r\n  return (\r\n    <div className={styles.popup_2} onClick={(e) => e.stopPropagation()}>\r\n      <section className={styles.section_1}>\r\n        <div className={styles.circleAndPlus}>\r\n          {Array.from({ length: count }).map((_, index) => (\r\n            <div\r\n              onClick={() => handleClickonCircle(index)}\r\n              key={index}\r\n              className={`${styles.circle} ${\r\n                index === currentIndex ? styles.border : \"\"\r\n              }`}\r\n            >\r\n              {index + 1}\r\n              {count === 1 ? null : (\r\n                <img\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    handleRemoveQuestion(index);\r\n                    handleClickonCircle(Math.max(index - 1, 0));\r\n                  }}\r\n                  src={cross}\r\n                  alt=\"cross img\"\r\n                />\r\n              )}\r\n            </div>\r\n          ))}\r\n          {count >= 5 ? null : (\r\n            <img onClick={handleAddQuestion} src={plus} alt=\"add img\" />\r\n          )}\r\n        </div>\r\n        <span>Max 5 questions</span>\r\n      </section>\r\n      <section className={styles.section_2}>\r\n        <input\r\n          onChange={(e) => {\r\n            const newQuestions = [...questions];\r\n            newQuestions[currentIndex].question = e.target.value;\r\n            setQuestions(newQuestions);\r\n          }}\r\n          value={\r\n            questions[currentIndex] ? questions[currentIndex].question : \"\"\r\n          }\r\n          type=\"text\"\r\n          name=\"poll question\"\r\n          placeholder=\"Poll Question\"\r\n        />\r\n        <div className={styles.optionType}>\r\n          <span>Option Type</span>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"option\"\r\n              value=\"text\"\r\n              checked={questions[currentIndex]?.optionType === \"text\"}\r\n              onChange={() => {\r\n                setCurrentOptiontype(\"text\");\r\n                const newQuestions = [...questions];\r\n                newQuestions[currentIndex].optionType = \"text\";\r\n                setQuestions(newQuestions);\r\n              }}\r\n            />\r\n            <span>Text</span>\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"option\"\r\n              value=\"url\"\r\n              checked={questions[currentIndex]?.optionType === \"url\"}\r\n              onChange={() => {\r\n                setCurrentOptiontype(\"url\");\r\n                const newQuestions = [...questions];\r\n                newQuestions[currentIndex].optionType = \"url\";\r\n                setQuestions(newQuestions);\r\n              }}\r\n            />\r\n            <span>Image URL</span>\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"option\"\r\n              value=\"textandurl\"\r\n              checked={questions[currentIndex]?.optionType === \"textandurl\"}\r\n              onChange={() => {\r\n                setCurrentOptiontype(\"textandurl\");\r\n                const newQuestions = [...questions];\r\n                newQuestions[currentIndex].optionType = \"textandurl\";\r\n                setQuestions(newQuestions);\r\n              }}\r\n            />\r\n            <span>Text & Image URL</span>\r\n          </label>\r\n        </div>\r\n      </section>\r\n\r\n      <section className={styles.section_3}>\r\n        {currentOptionType === \"text\" && (\r\n          <Typetext\r\n            questions={questions}\r\n            setQuestions={setQuestions}\r\n            currentIndex={currentIndex}\r\n          />\r\n        )}\r\n        {currentOptionType === \"url\" && (\r\n          <TypeURL\r\n            questions={questions}\r\n            setQuestions={setQuestions}\r\n            currentIndex={currentIndex}\r\n          />\r\n        )}\r\n        {currentOptionType === \"textandurl\" && (\r\n          <TypetextandURL\r\n            questions={questions}\r\n            setQuestions={setQuestions}\r\n            currentIndex={currentIndex}\r\n          />\r\n        )}\r\n      </section>\r\n      {quizType === \"Q&A\" ? (\r\n        <div className={styles.timer}>\r\n          <span className={styles.text}>Timer</span>\r\n          <span\r\n            style={{\r\n              backgroundColor: timer === 0 ? \"#D60000\" : \"white\",\r\n              color: timer === 0 ? \"white\" : \"#9F9F9F\",\r\n            }}\r\n            onClick={() => setTimer(0)}\r\n          >\r\n            OFF\r\n          </span>\r\n          <span\r\n            style={{\r\n              backgroundColor: timer === 5 ? \"#D60000\" : \"white\",\r\n              color: timer === 5 ? \"white\" : \"#9F9F9F\",\r\n            }}\r\n            onClick={() => setTimer(5)}\r\n          >\r\n            5 sec\r\n          </span>\r\n          <span\r\n            style={{\r\n              backgroundColor: timer === 10 ? \"#D60000\" : \"white\",\r\n              color: timer === 10 ? \"white\" : \"#9F9F9F\",\r\n            }}\r\n            onClick={() => setTimer(10)}\r\n          >\r\n            10 sec\r\n          </span>\r\n        </div>\r\n      ) : null}\r\n      <section className={styles.section_4}>\r\n        <div className={styles.cancelContinue}>\r\n          <button\r\n            className={styles.cancelbtn}\r\n            onClick={() => {\r\n              setDashboard(true);\r\n              setCreateQuiz(false);\r\n              setQuizType(\"Q&A\");\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            disabled={loading}\r\n            className={styles.continuebtn}\r\n            onClick={handleQuizCreation}\r\n          >\r\n            {loading ? \"Wait...\" : \"Create Quiz\"}\r\n          </button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Createquiz;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,MAAM,MAAM,iCAAiC;AACpD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,QAAQ;AACnC,SAASC,OAAO,QAAQ,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,UAAU,GAAGA,CAAC;EAClBC,MAAM;EACNC,SAAS;EACTC,OAAO;EACPC,UAAU;EACVC,YAAY;EACZC,YAAY;EACZC,aAAa;EACbC,QAAQ;EACRC,QAAQ;EACRC;AACF,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EACJ,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAAC,CACzC;IAAEgC,QAAQ,EAAE,EAAE;IAAEC,UAAU,EAAE,EAAE;IAAEC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;IAAEC,aAAa,EAAE;EAAK,CAAC,CACzE,CAAC;EACF,MAAM;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAGnC,UAAU,CAACU,OAAO,CAAC;EACnD,MAAM,CAAC0B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvC,QAAQ,CAAC,MAAM,CAAC;EAClE,MAAM,CAACwC,YAAY,EAAEC,eAAe,CAAC,GAAGzC,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAAC0C,eAAe,EAAEC,kBAAkB,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC4C,cAAc,EAAEC,iBAAiB,CAAC,GAAG7C,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1D,MAAM,CAACmC,aAAa,EAAEW,gBAAgB,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACkC,OAAO,EAAEa,UAAU,CAAC,GAAG/C,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAChD,MAAM,CAACgD,KAAK,EAAEC,QAAQ,CAAC,GAAGjD,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACkD,KAAK,EAAEC,QAAQ,CAAC,GAAGnD,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMoD,oBAAoB,GAAIC,KAAK,IAAK;IAAA,IAAAC,qBAAA,EAAAC,sBAAA;IACtC,MAAMC,YAAY,GAAG,CAAC,GAAG1B,SAAS,CAAC;IACnC0B,YAAY,CAACC,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;IAC7BtB,YAAY,CAACyB,YAAY,CAAC;IAC1BP,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IAEnB,IAAIU,QAAQ,GAAGlB,YAAY;IAC3B,IAAIa,KAAK,KAAKb,YAAY,EAAE;MAC1BkB,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACJ,YAAY,CAACK,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;IACjD,CAAC,MAAM,IAAIR,KAAK,GAAGb,YAAY,EAAE;MAC/BkB,QAAQ,GAAGlB,YAAY,GAAG,CAAC;IAC7B;IACAC,eAAe,CAACiB,QAAQ,CAAC;IAEzBX,UAAU,CAAC,EAAAO,qBAAA,GAAAE,YAAY,CAACE,QAAQ,CAAC,cAAAJ,qBAAA,uBAAtBA,qBAAA,CAAwBpB,OAAO,KAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACvDY,gBAAgB,CAAC,EAAAS,sBAAA,GAAAC,YAAY,CAACE,QAAQ,CAAC,cAAAH,sBAAA,uBAAtBA,sBAAA,CAAwBpB,aAAa,KAAI,IAAI,CAAC;EACjE,CAAC;EAED,MAAM2B,mBAAmB,GAAIT,KAAK,IAAK;IACrCZ,eAAe,CAACY,KAAK,CAAC;IACtB,IAAIf,iBAAiB,GAAGR,SAAS,CAACuB,KAAK,CAAC,CAACpB,UAAU;IAEnD,IAAIK,iBAAiB,KAAK,EAAE,EAAE;MAC5BA,iBAAiB,GAAG,MAAM;IAC5B;IAEAC,oBAAoB,CAACD,iBAAiB,CAAC;EACzC,CAAC;EAED,MAAMyB,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,WAAW,GAAG;MAClBhC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;MACjBC,aAAa,EAAE;IACjB,CAAC;IACDJ,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEkC,WAAW,CAAC,CAAC;IACzCf,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACnBP,eAAe,CAACO,KAAK,CAAC;IACtB;EACF,CAAC;EAED/C,SAAS,CAAC,MAAM;IAAA,IAAAgE,qBAAA,EAAAC,sBAAA;IACdvB,kBAAkB,CAAC,EAAAsB,qBAAA,GAAAnC,SAAS,CAACU,YAAY,CAAC,cAAAyB,qBAAA,uBAAvBA,qBAAA,CAAyBjC,QAAQ,KAAI,EAAE,CAAC;IAC3Da,iBAAiB,CAAC,EAAAqB,sBAAA,GAAApC,SAAS,CAACU,YAAY,CAAC,cAAA0B,sBAAA,uBAAvBA,sBAAA,CAAyBhC,OAAO,KAAI,CAAC,EAAE,CAAC,CAAC;EAC7D,CAAC,EAAE,CAACM,YAAY,EAAEV,SAAS,CAAC,CAAC;;EAE7B;EACA;EACA,MAAMqC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC;;IAEA,IAAIC,IAAI,GAAG,IAAI;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvC,SAAS,CAAC+B,MAAM,EAAEQ,CAAC,EAAE,EAAE;MACzC,IAAI,CAACvC,SAAS,CAACuC,CAAC,CAAC,CAACrC,QAAQ,CAACsC,IAAI,CAAC,CAAC,EAAE;QACjC7D,KAAK,CAAC8D,KAAK,CAAE,YAAWF,CAAC,GAAG,CAAE,cAAa,CAAC;QAC5CD,IAAI,GAAG,KAAK;QACZ;MACF;MACA,IAAI,CAACtC,SAAS,CAACuC,CAAC,CAAC,CAACpC,UAAU,CAACqC,IAAI,CAAC,CAAC,EAAE;QACnC7D,KAAK,CAAC8D,KAAK,CAAE,4BAA2BF,CAAC,GAAG,CAAE,cAAa,CAAC;QAC5DD,IAAI,GAAG,KAAK;QACZ;MACF;MACA,IAAItC,SAAS,CAACuC,CAAC,CAAC,CAACnC,OAAO,CAAC2B,MAAM,GAAG,CAAC,EAAE;QACnCpD,KAAK,CAAC8D,KAAK,CAAE,YAAWF,CAAC,GAAG,CAAE,mCAAkC,CAAC;QACjED,IAAI,GAAG,KAAK;QACZ;MACF;MACA,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1C,SAAS,CAACuC,CAAC,CAAC,CAACnC,OAAO,CAAC2B,MAAM,EAAEW,CAAC,EAAE,EAAE;QACpD,IAAI,CAAC1C,SAAS,CAACuC,CAAC,CAAC,CAACnC,OAAO,CAACsC,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC,EAAE;UACnC7D,KAAK,CAAC8D,KAAK,CAAE,UAASC,CAAC,GAAG,CAAE,iBAAgBH,CAAC,GAAG,CAAE,cAAa,CAAC;UAChED,IAAI,GAAG,KAAK;UACZ;QACF;MACF;MACA,IACEtC,SAAS,CAACuC,CAAC,CAAC,CAAClC,aAAa,KAAK,EAAE,IACjCL,SAAS,CAACuC,CAAC,CAAC,CAAClC,aAAa,KAAK,IAAI,EACnC;QACA1B,KAAK,CAAC8D,KAAK,CAAE,+BAA8BF,CAAC,GAAG,CAAE,cAAa,CAAC;QAC/DD,IAAI,GAAG,KAAK;QACZ;MACF;IACF;IAEA,MAAMK,GAAG,GAAG;MACVlD,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA,QAAQ;MAClBM,SAAS,EAAEA,SAAS;MACpBoB,KAAK,EAAEA;IACT,CAAC;IACD;IACA,IAAIkB,IAAI,KAAK,IAAI,EAAE;MACjB/B,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAM;UAAEqC;QAAK,CAAC,GAAG,MAAMhE,KAAK,CAACiE,IAAI,CAAE,+CAA8C,EAAEF,GAAG,EAAE;UACtFG,eAAe,EAAE,IAAI;UACrBC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB;QAChD,CAAC,CAAC;QAEF5D,SAAS,CAACyD,IAAI,CAAC1D,MAAM,CAAC;QACtBqB,UAAU,CAAC,KAAK,CAAC;QACjB5B,KAAK,CAACqE,OAAO,CAACJ,IAAI,CAACK,OAAO,CAAC;QAC3BzD,aAAa,CAAC,KAAK,CAAC;QACpBF,YAAY,CAAC,IAAI,CAAC;QAClBD,UAAU,CAAC,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOoD,KAAK,EAAE;QACdS,OAAO,CAACT,KAAK,CAACA,KAAK,CAAC;QACpB9D,KAAK,CAAC8D,KAAK,CAAC,2CAA2C,CAAC;QACxDlC,UAAU,CAAC,KAAK,CAAC;QACjBhB,YAAY,CAAC,IAAI,CAAC;QAClBC,aAAa,CAAC,KAAK,CAAC;MACtB;IACF;EACF,CAAC;EACD,MAAMmD,GAAG,GAAG;IACVlD,QAAQ,EAAEA,QAAQ;IAClBC,QAAQ,EAAEA,QAAQ;IAClBM,SAAS,EAAEA,SAAS;IACpBoB,KAAK,EAAEA;EACT,CAAC;EACD;EACA;EACA,oBACEpC,OAAA;IAAKmE,SAAS,EAAE9E,MAAM,CAAC+E,OAAQ;IAACC,OAAO,EAAGC,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;IAAAC,QAAA,gBAClExE,OAAA;MAASmE,SAAS,EAAE9E,MAAM,CAACoF,SAAU;MAAAD,QAAA,gBACnCxE,OAAA;QAAKmE,SAAS,EAAE9E,MAAM,CAACqF,aAAc;QAAAF,QAAA,GAClCG,KAAK,CAACC,IAAI,CAAC;UAAE7B,MAAM,EAAEb;QAAM,CAAC,CAAC,CAAC2C,GAAG,CAAC,CAACC,CAAC,EAAEvC,KAAK,kBAC1CvC,OAAA;UACEqE,OAAO,EAAEA,CAAA,KAAMrB,mBAAmB,CAACT,KAAK,CAAE;UAE1C4B,SAAS,EAAG,GAAE9E,MAAM,CAAC0F,MAAO,IAC1BxC,KAAK,KAAKb,YAAY,GAAGrC,MAAM,CAAC2F,MAAM,GAAG,EAC1C,EAAE;UAAAR,QAAA,GAEFjC,KAAK,GAAG,CAAC,EACTL,KAAK,KAAK,CAAC,GAAG,IAAI,gBACjBlC,OAAA;YACEqE,OAAO,EAAGC,CAAC,IAAK;cACdA,CAAC,CAACC,eAAe,CAAC,CAAC;cACnBjC,oBAAoB,CAACC,KAAK,CAAC;cAC3BS,mBAAmB,CAACH,IAAI,CAACC,GAAG,CAACP,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7C,CAAE;YACF0C,GAAG,EAAE3F,KAAM;YACX4F,GAAG,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CACF;QAAA,GAhBI/C,KAAK;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAiBP,CACN,CAAC,EACDpD,KAAK,IAAI,CAAC,GAAG,IAAI,gBAChBlC,OAAA;UAAKqE,OAAO,EAAEpB,iBAAkB;UAACgC,GAAG,EAAE1F,IAAK;UAAC2F,GAAG,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAC5D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNtF,OAAA;QAAAwE,QAAA,EAAM;MAAe;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACVtF,OAAA;MAASmE,SAAS,EAAE9E,MAAM,CAACkG,SAAU;MAAAf,QAAA,gBACnCxE,OAAA;QACEwF,QAAQ,EAAGlB,CAAC,IAAK;UACf,MAAM5B,YAAY,GAAG,CAAC,GAAG1B,SAAS,CAAC;UACnC0B,YAAY,CAAChB,YAAY,CAAC,CAACR,QAAQ,GAAGoD,CAAC,CAACmB,MAAM,CAACC,KAAK;UACpDzE,YAAY,CAACyB,YAAY,CAAC;QAC5B,CAAE;QACFgD,KAAK,EACH1E,SAAS,CAACU,YAAY,CAAC,GAAGV,SAAS,CAACU,YAAY,CAAC,CAACR,QAAQ,GAAG,EAC9D;QACDyE,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,eAAe;QACpBC,WAAW,EAAC;MAAe;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFtF,OAAA;QAAKmE,SAAS,EAAE9E,MAAM,CAAC8B,UAAW;QAAAqD,QAAA,gBAChCxE,OAAA;UAAAwE,QAAA,EAAM;QAAW;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACxBtF,OAAA;UAAAwE,QAAA,gBACExE,OAAA;YACE2F,IAAI,EAAC,OAAO;YACZC,IAAI,EAAC,QAAQ;YACbF,KAAK,EAAC,MAAM;YACZI,OAAO,EAAE,EAAAjF,sBAAA,GAAAG,SAAS,CAACU,YAAY,CAAC,cAAAb,sBAAA,uBAAvBA,sBAAA,CAAyBM,UAAU,MAAK,MAAO;YACxDqE,QAAQ,EAAEA,CAAA,KAAM;cACd/D,oBAAoB,CAAC,MAAM,CAAC;cAC5B,MAAMiB,YAAY,GAAG,CAAC,GAAG1B,SAAS,CAAC;cACnC0B,YAAY,CAAChB,YAAY,CAAC,CAACP,UAAU,GAAG,MAAM;cAC9CF,YAAY,CAACyB,YAAY,CAAC;YAC5B;UAAE;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACFtF,OAAA;YAAAwE,QAAA,EAAM;UAAI;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,eACRtF,OAAA;UAAAwE,QAAA,gBACExE,OAAA;YACE2F,IAAI,EAAC,OAAO;YACZC,IAAI,EAAC,QAAQ;YACbF,KAAK,EAAC,KAAK;YACXI,OAAO,EAAE,EAAAhF,sBAAA,GAAAE,SAAS,CAACU,YAAY,CAAC,cAAAZ,sBAAA,uBAAvBA,sBAAA,CAAyBK,UAAU,MAAK,KAAM;YACvDqE,QAAQ,EAAEA,CAAA,KAAM;cACd/D,oBAAoB,CAAC,KAAK,CAAC;cAC3B,MAAMiB,YAAY,GAAG,CAAC,GAAG1B,SAAS,CAAC;cACnC0B,YAAY,CAAChB,YAAY,CAAC,CAACP,UAAU,GAAG,KAAK;cAC7CF,YAAY,CAACyB,YAAY,CAAC;YAC5B;UAAE;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACFtF,OAAA;YAAAwE,QAAA,EAAM;UAAS;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACRtF,OAAA;UAAAwE,QAAA,gBACExE,OAAA;YACE2F,IAAI,EAAC,OAAO;YACZC,IAAI,EAAC,QAAQ;YACbF,KAAK,EAAC,YAAY;YAClBI,OAAO,EAAE,EAAA/E,sBAAA,GAAAC,SAAS,CAACU,YAAY,CAAC,cAAAX,sBAAA,uBAAvBA,sBAAA,CAAyBI,UAAU,MAAK,YAAa;YAC9DqE,QAAQ,EAAEA,CAAA,KAAM;cACd/D,oBAAoB,CAAC,YAAY,CAAC;cAClC,MAAMiB,YAAY,GAAG,CAAC,GAAG1B,SAAS,CAAC;cACnC0B,YAAY,CAAChB,YAAY,CAAC,CAACP,UAAU,GAAG,YAAY;cACpDF,YAAY,CAACyB,YAAY,CAAC;YAC5B;UAAE;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACFtF,OAAA;YAAAwE,QAAA,EAAM;UAAgB;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEVtF,OAAA;MAASmE,SAAS,EAAE9E,MAAM,CAAC0G,SAAU;MAAAvB,QAAA,GAClChD,iBAAiB,KAAK,MAAM,iBAC3BxB,OAAA,CAACR,QAAQ;QACPwB,SAAS,EAAEA,SAAU;QACrBC,YAAY,EAAEA,YAAa;QAC3BS,YAAY,EAAEA;MAAa;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CACF,EACA9D,iBAAiB,KAAK,KAAK,iBAC1BxB,OAAA,CAACP,OAAO;QACNuB,SAAS,EAAEA,SAAU;QACrBC,YAAY,EAAEA,YAAa;QAC3BS,YAAY,EAAEA;MAAa;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CACF,EACA9D,iBAAiB,KAAK,YAAY,iBACjCxB,OAAA,CAACN,cAAc;QACbsB,SAAS,EAAEA,SAAU;QACrBC,YAAY,EAAEA,YAAa;QAC3BS,YAAY,EAAEA;MAAa;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,EACT5E,QAAQ,KAAK,KAAK,gBACjBV,OAAA;MAAKmE,SAAS,EAAE9E,MAAM,CAAC+C,KAAM;MAAAoC,QAAA,gBAC3BxE,OAAA;QAAMmE,SAAS,EAAE9E,MAAM,CAAC2G,IAAK;QAAAxB,QAAA,EAAC;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC1CtF,OAAA;QACEiG,KAAK,EAAE;UACLC,eAAe,EAAE9D,KAAK,KAAK,CAAC,GAAG,SAAS,GAAG,OAAO;UAClD+D,KAAK,EAAE/D,KAAK,KAAK,CAAC,GAAG,OAAO,GAAG;QACjC,CAAE;QACFiC,OAAO,EAAEA,CAAA,KAAMhC,QAAQ,CAAC,CAAC,CAAE;QAAAmC,QAAA,EAC5B;MAED;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACPtF,OAAA;QACEiG,KAAK,EAAE;UACLC,eAAe,EAAE9D,KAAK,KAAK,CAAC,GAAG,SAAS,GAAG,OAAO;UAClD+D,KAAK,EAAE/D,KAAK,KAAK,CAAC,GAAG,OAAO,GAAG;QACjC,CAAE;QACFiC,OAAO,EAAEA,CAAA,KAAMhC,QAAQ,CAAC,CAAC,CAAE;QAAAmC,QAAA,EAC5B;MAED;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACPtF,OAAA;QACEiG,KAAK,EAAE;UACLC,eAAe,EAAE9D,KAAK,KAAK,EAAE,GAAG,SAAS,GAAG,OAAO;UACnD+D,KAAK,EAAE/D,KAAK,KAAK,EAAE,GAAG,OAAO,GAAG;QAClC,CAAE;QACFiC,OAAO,EAAEA,CAAA,KAAMhC,QAAQ,CAAC,EAAE,CAAE;QAAAmC,QAAA,EAC7B;MAED;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,GACJ,IAAI,eACRtF,OAAA;MAASmE,SAAS,EAAE9E,MAAM,CAAC+G,SAAU;MAAA5B,QAAA,eACnCxE,OAAA;QAAKmE,SAAS,EAAE9E,MAAM,CAACgH,cAAe;QAAA7B,QAAA,gBACpCxE,OAAA;UACEmE,SAAS,EAAE9E,MAAM,CAACiH,SAAU;UAC5BjC,OAAO,EAAEA,CAAA,KAAM;YACb9D,YAAY,CAAC,IAAI,CAAC;YAClBC,aAAa,CAAC,KAAK,CAAC;YACpBG,WAAW,CAAC,KAAK,CAAC;UACpB,CAAE;UAAA6D,QAAA,EACH;QAED;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTtF,OAAA;UACEuG,QAAQ,EAAEjF,OAAQ;UAClB6C,SAAS,EAAE9E,MAAM,CAACmH,WAAY;UAC9BnC,OAAO,EAAEhB,kBAAmB;UAAAmB,QAAA,EAE3BlD,OAAO,GAAG,SAAS,GAAG;QAAa;UAAA6D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAC1E,EAAA,CAnUIX,UAAU;AAAAwG,EAAA,GAAVxG,UAAU;AAqUhB,eAAeA,UAAU;AAAC,IAAAwG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}