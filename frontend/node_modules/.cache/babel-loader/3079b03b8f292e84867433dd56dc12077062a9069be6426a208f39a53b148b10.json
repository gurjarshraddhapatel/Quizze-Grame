{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Quizze-Grame-10\\\\frontend\\\\src\\\\components\\\\Playquiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport styles from \"../styles/playquiz.module.css\";\nimport axios from 'axios';\nimport { quizServer } from '../App';\nimport toast from 'react-hot-toast';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Context } from '..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playquiz = () => {\n  _s();\n  const [quiz, setQuiz] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [timer, setTimer] = useState(null);\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    setUserScore\n  } = useContext(Context);\n  const [loading, setLoading] = useState(false);\n  const getQuiz = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`http://localhost:4000/api/v1/quiz/getQuiz/${id}`, {\n        withCredentials: true\n      });\n      setQuiz(data.quiz);\n      setTimer(data.quiz.timer);\n      setUserAnswers(data.quiz.questions.map(question => ({\n        _id: question._id,\n        question: question.question,\n        userAnswer: \"\"\n      })));\n    } catch (err) {\n      console.error(err.message);\n      console.log(err);\n      toast.error(`Error: ${err.message}`);\n    }\n  };\n  useEffect(() => {\n    getQuiz();\n  }, [id]);\n  useEffect(() => {\n    if (timer === 0) {\n      if (quiz.timer !== 0) {\n        if (currentQuestionIndex < quiz.questions.length - 1) {\n          setCurrentQuestionIndex(currentQuestionIndex + 1);\n          setTimer(quiz.timer);\n        } else {\n          handleSubmit();\n        }\n      }\n    } else {\n      const timeout = setTimeout(() => setTimer(timer - 1), 1000);\n      return () => clearTimeout(timeout);\n    }\n  }, [timer]);\n\n  // useEffect(() => {\n  //   console.log({ quizId: id, questions: userAnswers });\n  // }, [timer]);\n\n  if (!quiz) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  const question = quiz.questions[currentQuestionIndex];\n  const handleOptionClick = option => {\n    const newUserAnswers = [...userAnswers];\n    newUserAnswers[currentQuestionIndex].userAnswer = option;\n    setUserAnswers(newUserAnswers);\n  };\n  const handleNextClick = () => {\n    if (currentQuestionIndex < quiz.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setTimer(quiz.timer);\n    }\n  };\n  const handleSubmit = async () => {\n    setLoading(true);\n    try {\n      const encodedUserAnswers = userAnswers.map(answer => ({\n        ...answer,\n        userAnswer: answer.userAnswer\n      }));\n      const {\n        data\n      } = await axios.post(`http://localhost:4000/api/v1/quiz//check-answer`, {\n        quizId: id,\n        questions: encodedUserAnswers\n      }, {\n        withCredentials: true\n      });\n      if (quiz.quizType === 'Poll') {\n        toast.success(\"Thanks for participating in the poll!\");\n        navigate('/Poll');\n      } else {\n        setUserScore(`${data.totalScore}/${currentQuestionIndex + 1}`);\n        toast.success(\"Quiz submitted successfully!\");\n        navigate('/result');\n      }\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.error(error);\n      toast.error(\"Something went wrong\");\n    }\n  };\n\n  // console.log(userAnswers)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.parent,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.childBox,\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.section_1,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [currentQuestionIndex + 1, \"/\", quiz.questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), quiz.quizType !== 'Poll' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.timer,\n          children: [\"00:\", timer, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.section_2,\n        children: question.options.map((option, index) => {\n          var _userAnswers$currentQ;\n          let optionText, optionUrl;\n          if (question.optionType === 'textandurl') {\n            [optionText, optionUrl] = option.split('|');\n          }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: option === ((_userAnswers$currentQ = userAnswers[currentQuestionIndex]) === null || _userAnswers$currentQ === void 0 ? void 0 : _userAnswers$currentQ.userAnswer) ? styles.selectedOption : '',\n            onClick: () => handleOptionClick(option),\n            children: question.optionType === 'text' ? option : question.optionType === 'url' ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: option,\n              alt: \"Option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 50\n            }, this) : question.optionType === 'textandurl' ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.textAndUrl,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: optionUrl,\n                alt: \"Option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 92\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: optionText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 128\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 57\n            }, this) : null\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), currentQuestionIndex < quiz.questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextClick,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: loading ? \"wait...\" : \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(Playquiz, \"ei+4ILPY0I4UVm3RswR1mUH9Kh8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Playquiz;\nexport default Playquiz;\nvar _c;\n$RefreshReg$(_c, \"Playquiz\");","map":{"version":3,"names":["React","useContext","useEffect","useState","styles","axios","quizServer","toast","useParams","useNavigate","Context","jsxDEV","_jsxDEV","Playquiz","_s","quiz","setQuiz","currentQuestionIndex","setCurrentQuestionIndex","userAnswers","setUserAnswers","timer","setTimer","id","navigate","setUserScore","loading","setLoading","getQuiz","data","get","withCredentials","questions","map","question","_id","userAnswer","err","console","error","message","log","length","handleSubmit","timeout","setTimeout","clearTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","handleOptionClick","option","newUserAnswers","handleNextClick","encodedUserAnswers","answer","post","quizId","quizType","success","totalScore","className","parent","childBox","section_1","section_2","options","index","_userAnswers$currentQ","optionText","optionUrl","optionType","split","selectedOption","onClick","src","alt","textAndUrl","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Quizze-Grame-10/frontend/src/components/Playquiz.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport styles from \"../styles/playquiz.module.css\";\r\nimport axios from 'axios';\r\nimport { quizServer } from '../App';\r\nimport toast from 'react-hot-toast';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Context } from '..';\r\n\r\nconst Playquiz = () => {\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [timer, setTimer] = useState(null);\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const {setUserScore} = useContext(Context)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const getQuiz = async () => {\r\n    try {\r\n      const {data} = await axios.get(`http://localhost:4000/api/v1/quiz/getQuiz/${id}`, { withCredentials: true });\r\n      setQuiz(data.quiz);\r\n      setTimer(data.quiz.timer);\r\n      setUserAnswers(data.quiz.questions.map(question => ({ _id: question._id, question: question.question, userAnswer: \"\" })));\r\n    } catch (err) {\r\n      console.error(err.message);\r\n      console.log(err)\r\n      toast.error(`Error: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQuiz();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (timer === 0) {\r\n      if (quiz.timer !== 0) {\r\n        if (currentQuestionIndex < quiz.questions.length - 1) {\r\n          setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n          setTimer(quiz.timer);\r\n        } else {\r\n          handleSubmit();\r\n        }\r\n      }\r\n    } else {\r\n      const timeout = setTimeout(() => setTimer(timer - 1), 1000);\r\n      return () => clearTimeout(timeout);\r\n    }\r\n  }, [timer]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log({ quizId: id, questions: userAnswers });\r\n  // }, [timer]);\r\n\r\n  if (!quiz) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const question = quiz.questions[currentQuestionIndex];\r\n\r\n  const handleOptionClick = (option) => {\r\n    const newUserAnswers = [...userAnswers];\r\n    newUserAnswers[currentQuestionIndex].userAnswer = option; \r\n    setUserAnswers(newUserAnswers);\r\n  };\r\n\r\n  const handleNextClick = () => {\r\n    if (currentQuestionIndex < quiz.questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n      setTimer(quiz.timer);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const encodedUserAnswers = userAnswers.map(answer => ({\r\n        ...answer,\r\n        userAnswer: answer.userAnswer \r\n      }));\r\n      const { data } = await axios.post(`http://localhost:4000/api/v1/quiz//check-answer`, { quizId: id, questions: encodedUserAnswers }, { withCredentials: true });\r\n        if (quiz.quizType === 'Poll') {\r\n            toast.success(\"Thanks for participating in the poll!\");\r\n            navigate('/Poll');\r\n        } else {\r\n            setUserScore(`${data.totalScore}/${currentQuestionIndex+1}`);\r\n            toast.success(\"Quiz submitted successfully!\");\r\n            navigate('/result');\r\n        }\r\n        setLoading(false);\r\n    } catch (error) {\r\n        setLoading(false);\r\n        console.error(error);\r\n        toast.error(\"Something went wrong\");\r\n    }\r\n};\r\n\r\n// console.log(userAnswers)\r\n\r\n  return (\r\n    <div className={styles.parent}>\r\n      <div className={styles.childBox}>\r\n        <section className={styles.section_1}>\r\n          <span>{currentQuestionIndex + 1}/{quiz.questions.length}</span>\r\n          {quiz.quizType !== 'Poll' && <span className={styles.timer}>00:{timer}s</span>}\r\n        </section>\r\n        <h1>{question.question}</h1>\r\n        <section className={styles.section_2}>\r\n        {question.options.map((option, index) => {\r\n            let optionText, optionUrl;\r\n            if (question.optionType === 'textandurl') {\r\n              [optionText, optionUrl] = option.split('|');\r\n            }\r\n            return (\r\n              <div key={index} className={option === userAnswers[currentQuestionIndex]?.userAnswer ? styles.selectedOption : ''} onClick={() => handleOptionClick(option)} >\r\n                {question.optionType === 'text' ? option : \r\n                 question.optionType === 'url' ? <img src={option} alt=\"Option\" /> :\r\n                 question.optionType === 'textandurl' ? <div className={styles.textAndUrl}><img src={optionUrl} alt=\"Option\" /><p>{optionText}</p></div> : null}\r\n              </div>\r\n            );\r\n          })}\r\n        </section>\r\n        {currentQuestionIndex < quiz.questions.length - 1 ? (\r\n          <button onClick={handleNextClick}>Next</button>\r\n        ) : (\r\n          <button onClick={handleSubmit}>{loading ? \"wait...\" : \"SUBMIT\"}</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Playquiz;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}