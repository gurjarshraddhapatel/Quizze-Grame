{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Quizze-Grame-10\\\\frontend\\\\src\\\\components\\\\Updatequiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport styles from \"../styles/createquiz.module.css\";\nimport cross from \"../assets/cross.png\";\nimport plus from \"../assets/plus.png\";\nimport Typetext from \"./Typetext\";\nimport TypeURL from \"./TypeURL\";\nimport TypetextandURL from \"./TypetextandURL\";\nimport toast from \"react-hot-toast\";\nimport axios from \"axios\";\nimport { quizServer } from \"../App\";\nimport { Context } from \"..\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Updatequiz = ({\n  updateQuiz,\n  setUpdateQuiz,\n  quizTobeUpdate\n}) => {\n  _s();\n  var _questions$currentInd4, _questions$currentInd5, _questions$currentInd6;\n  const [questions, setQuestions] = useState([{\n    question: \"\",\n    optionType: \"\",\n    options: [\"\", \"\"],\n    correctAnswer: null\n  }]);\n  const {\n    loading,\n    setLoading\n  } = useContext(Context);\n  const [currentOptionType, setCurrentOptiontype] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(\"\");\n  const [currentOptions, setCurrentOptions] = useState([\"\"]);\n  const [correctAnswer, setCorrectAnswer] = useState(\"\");\n  const [options, setOptions] = useState([\"\", \"\"]);\n  const [count, setCount] = useState(1);\n  const [timer, setTimer] = useState(null);\n  const [quiz, setQuiz] = useState(null);\n  const getQuiz = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`http://localhost:4000/api/v1/quiz/getQuizForUpdate/${quizTobeUpdate}`, {\n        withCredentials: true\n      });\n      setQuestions(data.quiz.questions);\n      setTimer(data.quiz.timer);\n      setCount(questions.length);\n      setQuiz(data.quiz);\n    } catch (err) {\n      console.error(err.message);\n      console.log(err);\n      toast.error(`Error: ${err.message}`);\n    }\n  };\n  useEffect(() => {\n    getQuiz();\n  }, []);\n  useEffect(() => {\n    setCount(questions.length);\n  }, [questions]);\n  const handleRemoveQuestion = index => {\n    var _newQuestions$newInde, _newQuestions$newInde2;\n    const newQuestions = [...questions];\n    newQuestions.splice(index, 1);\n    setQuestions(newQuestions);\n    setCount(count - 1);\n    let newIndex = currentIndex;\n    if (index === currentIndex) {\n      newIndex = Math.max(newQuestions.length - 1, 0);\n    } else if (index < currentIndex) {\n      newIndex = currentIndex - 1;\n    }\n    setCurrentIndex(newIndex);\n    setOptions(((_newQuestions$newInde = newQuestions[newIndex]) === null || _newQuestions$newInde === void 0 ? void 0 : _newQuestions$newInde.options) || [\"\", \"\"]);\n    setCorrectAnswer(((_newQuestions$newInde2 = newQuestions[newIndex]) === null || _newQuestions$newInde2 === void 0 ? void 0 : _newQuestions$newInde2.correctAnswer) || null);\n  };\n  const handleClickonCircle = index => {\n    setCurrentIndex(index);\n    let currentOptionType = questions[index].optionType;\n    if (currentOptionType === \"\") {\n      currentOptionType = \"text\";\n    }\n    setCurrentOptiontype(currentOptionType);\n  };\n  const handleAddQuestion = () => {\n    const newQuestion = {\n      question: \"\",\n      optionType: \"\",\n      options: [\"\", \"\"],\n      correctAnswer: \"\"\n    };\n    setQuestions([...questions, newQuestion]);\n    setCount(count + 1);\n    setCurrentIndex(count);\n    // setCurrentOptiontype(\"text\");\n  };\n  useEffect(() => {\n    var _questions$currentInd, _questions$currentInd2, _questions$currentInd3;\n    setCurrentQuestion(((_questions$currentInd = questions[currentIndex]) === null || _questions$currentInd === void 0 ? void 0 : _questions$currentInd.question) || \"\");\n    setCurrentOptions(((_questions$currentInd2 = questions[currentIndex]) === null || _questions$currentInd2 === void 0 ? void 0 : _questions$currentInd2.options) || [\"\"]);\n    setCurrentOptiontype(((_questions$currentInd3 = questions[currentIndex]) === null || _questions$currentInd3 === void 0 ? void 0 : _questions$currentInd3.optionType) || \"text\");\n  }, [currentIndex, questions]);\n\n  // console.log(questions);\n\n  const handleQuizUpdation = async () => {\n    // Validation\n\n    let flag = true;\n    for (let i = 0; i < questions.length; i++) {\n      if (!questions[i].question.trim()) {\n        toast.error(`Question ${i + 1} is required`);\n        flag = false;\n        return;\n      }\n      if (!questions[i].optionType.trim()) {\n        toast.error(`Option type for question ${i + 1} is required`);\n        flag = false;\n        return;\n      }\n      if (questions[i].options.length < 2) {\n        toast.error(`Question ${i + 1} should have at least two options`);\n        flag = false;\n        return;\n      }\n      for (let j = 0; j < questions[i].options.length; j++) {\n        if (!questions[i].options[j].trim()) {\n          toast.error(`Option ${j + 1} for question ${i + 1} is required`);\n          flag = false;\n          return;\n        }\n      }\n      if (questions[i].correctAnswer === \"\" || questions[i].correctAnswer === null) {\n        toast.error(`Correct answer for question ${i + 1} is required`);\n        flag = false;\n        return;\n      }\n    }\n    const obj = {\n      quizName: quiz.quizName,\n      quizType: quiz.quizType,\n      questions: questions,\n      timer: timer\n    };\n    // console.log(obj);\n    if (flag === true) {\n      setLoading(true);\n      try {\n        const {\n          data\n        } = await axios.put(`${quizServer}/update-quize/${quizTobeUpdate}`, obj, {\n          withCredentials: true,\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        setLoading(false);\n        toast.success(data.message);\n        setUpdateQuiz(false);\n      } catch (error) {\n        console.error(error);\n        toast.error(\"An error occurred while creating the quiz\");\n        setLoading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.popup_2,\n    onClick: e => e.stopPropagation(),\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.section_1,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.circleAndPlus,\n        children: [Array.from({\n          length: count\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleClickonCircle(index),\n          className: `${styles.circle} ${index === currentIndex ? styles.border : \"\"}`,\n          children: [index + 1, count === 1 ? null : /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: e => {\n              e.stopPropagation();\n              handleRemoveQuestion(index);\n              handleClickonCircle(Math.max(index - 1, 0));\n            },\n            src: cross,\n            alt: \"cross img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)), count >= 5 ? null : /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: handleAddQuestion,\n          src: plus,\n          alt: \"add img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Max 5 questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.section_2,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          const newQuestions = [...questions];\n          newQuestions[currentIndex].question = e.target.value;\n          setQuestions(newQuestions);\n        },\n        value: questions[currentIndex] ? questions[currentIndex].question : \"\",\n        type: \"text\",\n        name: \"poll question\",\n        placeholder: \"Poll Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.optionType,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Option Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"option\",\n            value: \"text\",\n            checked: ((_questions$currentInd4 = questions[currentIndex]) === null || _questions$currentInd4 === void 0 ? void 0 : _questions$currentInd4.optionType) === \"text\",\n            onChange: () => {\n              setCurrentOptiontype(\"text\");\n              const newQuestions = [...questions];\n              newQuestions[currentIndex].optionType = \"text\";\n              setQuestions(newQuestions);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"option\",\n            value: \"url\",\n            checked: ((_questions$currentInd5 = questions[currentIndex]) === null || _questions$currentInd5 === void 0 ? void 0 : _questions$currentInd5.optionType) === \"url\",\n            onChange: () => {\n              setCurrentOptiontype(\"url\");\n              const newQuestions = [...questions];\n              newQuestions[currentIndex].optionType = \"url\";\n              setQuestions(newQuestions);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"option\",\n            value: \"textandurl\",\n            checked: ((_questions$currentInd6 = questions[currentIndex]) === null || _questions$currentInd6 === void 0 ? void 0 : _questions$currentInd6.optionType) === \"textandurl\",\n            onChange: () => {\n              setCurrentOptiontype(\"textandurl\");\n              const newQuestions = [...questions];\n              newQuestions[currentIndex].optionType = \"textandurl\";\n              setQuestions(newQuestions);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Text & Image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.section_3,\n      children: [currentOptionType === \"text\" && /*#__PURE__*/_jsxDEV(Typetext, {\n        questions: questions,\n        setQuestions: setQuestions,\n        currentIndex: currentIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), currentOptionType === \"url\" && /*#__PURE__*/_jsxDEV(TypeURL, {\n        questions: questions,\n        setQuestions: setQuestions,\n        currentIndex: currentIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), currentOptionType === \"textandurl\" && /*#__PURE__*/_jsxDEV(TypetextandURL, {\n        questions: questions,\n        setQuestions: setQuestions,\n        currentIndex: currentIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), quiz && quiz.quizType === \"Q&A\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.timer,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.text,\n        children: \"Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: timer === 0 ? \"#D60000\" : \"white\",\n          color: timer === 0 ? \"white\" : \"#9F9F9F\"\n        },\n        onClick: () => setTimer(0),\n        children: \"OFF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: timer === 5 ? \"#D60000\" : \"white\",\n          color: timer === 5 ? \"white\" : \"#9F9F9F\"\n        },\n        onClick: () => setTimer(5),\n        children: \"5 sec\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: timer === 10 ? \"#D60000\" : \"white\",\n          color: timer === 10 ? \"white\" : \"#9F9F9F\"\n        },\n        onClick: () => setTimer(10),\n        children: \"10 sec\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.section_4,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cancelContinue,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.cancelbtn,\n          onClick: () => setUpdateQuiz(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: loading,\n          className: styles.continuebtn,\n          onClick: handleQuizUpdation,\n          children: loading ? \"Wait...\" : \"Update Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(Updatequiz, \"bQZmSNsOKZZhy4HmxNX8QdCiHMU=\");\n_c = Updatequiz;\nexport default Updatequiz;\nvar _c;\n$RefreshReg$(_c, \"Updatequiz\");","map":{"version":3,"names":["React","useState","useEffect","useContext","styles","cross","plus","Typetext","TypeURL","TypetextandURL","toast","axios","quizServer","Context","jsxDEV","_jsxDEV","Updatequiz","updateQuiz","setUpdateQuiz","quizTobeUpdate","_s","_questions$currentInd4","_questions$currentInd5","_questions$currentInd6","questions","setQuestions","question","optionType","options","correctAnswer","loading","setLoading","currentOptionType","setCurrentOptiontype","currentIndex","setCurrentIndex","currentQuestion","setCurrentQuestion","currentOptions","setCurrentOptions","setCorrectAnswer","setOptions","count","setCount","timer","setTimer","quiz","setQuiz","getQuiz","data","get","withCredentials","length","err","console","error","message","log","handleRemoveQuestion","index","_newQuestions$newInde","_newQuestions$newInde2","newQuestions","splice","newIndex","Math","max","handleClickonCircle","handleAddQuestion","newQuestion","_questions$currentInd","_questions$currentInd2","_questions$currentInd3","handleQuizUpdation","flag","i","trim","j","obj","quizName","quizType","put","headers","success","className","popup_2","onClick","e","stopPropagation","children","section_1","circleAndPlus","Array","from","map","_","circle","border","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","section_2","onChange","target","value","type","name","placeholder","checked","section_3","text","style","backgroundColor","color","section_4","cancelContinue","cancelbtn","disabled","continuebtn","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Quizze-Grame-10/frontend/src/components/Updatequiz.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport styles from \"../styles/createquiz.module.css\";\r\nimport cross from \"../assets/cross.png\";\r\nimport plus from \"../assets/plus.png\";\r\nimport Typetext from \"./Typetext\";\r\nimport TypeURL from \"./TypeURL\";\r\nimport TypetextandURL from \"./TypetextandURL\";\r\nimport toast from \"react-hot-toast\";\r\nimport axios from \"axios\";\r\nimport { quizServer } from \"../App\";\r\nimport { Context } from \"..\";\r\n\r\nconst Updatequiz = ({ updateQuiz, setUpdateQuiz, quizTobeUpdate }) => {\r\n  const [questions, setQuestions] = useState([\r\n    {\r\n      question: \"\",\r\n      optionType: \"\",\r\n      options: [\"\", \"\"],\r\n      correctAnswer: null,\r\n    },\r\n  ]);\r\n\r\n  const { loading, setLoading } = useContext(Context);\r\n  const [currentOptionType, setCurrentOptiontype] = useState(\"\");\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState(\"\");\r\n  const [currentOptions, setCurrentOptions] = useState([\"\"]);\r\n  const [correctAnswer, setCorrectAnswer] = useState(\"\");\r\n  const [options, setOptions] = useState([\"\", \"\"]);\r\n  const [count, setCount] = useState(1);\r\n  const [timer, setTimer] = useState(null);\r\n  const [quiz, setQuiz] = useState(null);\r\n\r\n  const getQuiz = async () => {\r\n    try {\r\n      const { data } = await axios.get(\r\n        `http://localhost:4000/api/v1/quiz/getQuizForUpdate/${quizTobeUpdate}`,\r\n        { withCredentials: true }\r\n      );\r\n      setQuestions(data.quiz.questions);\r\n      setTimer(data.quiz.timer);\r\n      setCount(questions.length);\r\n      setQuiz(data.quiz);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n      console.log(err);\r\n      toast.error(`Error: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQuiz();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCount(questions.length);\r\n  }, [questions]);\r\n\r\n  const handleRemoveQuestion = (index) => {\r\n    const newQuestions = [...questions];\r\n    newQuestions.splice(index, 1);\r\n    setQuestions(newQuestions);\r\n    setCount(count - 1);\r\n\r\n    let newIndex = currentIndex;\r\n    if (index === currentIndex) {\r\n      newIndex = Math.max(newQuestions.length - 1, 0);\r\n    } else if (index < currentIndex) {\r\n      newIndex = currentIndex - 1;\r\n    }\r\n    setCurrentIndex(newIndex);\r\n\r\n    setOptions(newQuestions[newIndex]?.options || [\"\", \"\"]);\r\n    setCorrectAnswer(newQuestions[newIndex]?.correctAnswer || null);\r\n  };\r\n\r\n  const handleClickonCircle = (index) => {\r\n    setCurrentIndex(index);\r\n    let currentOptionType = questions[index].optionType;\r\n\r\n    if (currentOptionType === \"\") {\r\n      currentOptionType = \"text\";\r\n    }\r\n\r\n    setCurrentOptiontype(currentOptionType);\r\n  };\r\n\r\n  const handleAddQuestion = () => {\r\n    const newQuestion = {\r\n      question: \"\",\r\n      optionType: \"\",\r\n      options: [\"\", \"\"],\r\n      correctAnswer: \"\",\r\n    };\r\n\r\n    setQuestions([...questions, newQuestion]);\r\n    setCount(count + 1);\r\n    setCurrentIndex(count);\r\n    // setCurrentOptiontype(\"text\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentQuestion(questions[currentIndex]?.question || \"\");\r\n    setCurrentOptions(questions[currentIndex]?.options || [\"\"]);\r\n    setCurrentOptiontype(questions[currentIndex]?.optionType || \"text\");\r\n  }, [currentIndex, questions]);\r\n\r\n  // console.log(questions);\r\n\r\n  const handleQuizUpdation = async () => {\r\n    // Validation\r\n\r\n    let flag = true;\r\n    for (let i = 0; i < questions.length; i++) {\r\n      if (!questions[i].question.trim()) {\r\n        toast.error(`Question ${i + 1} is required`);\r\n        flag = false;\r\n        return;\r\n      }\r\n      if (!questions[i].optionType.trim()) {\r\n        toast.error(`Option type for question ${i + 1} is required`);\r\n        flag = false;\r\n        return;\r\n      }\r\n      if (questions[i].options.length < 2) {\r\n        toast.error(`Question ${i + 1} should have at least two options`);\r\n        flag = false;\r\n        return;\r\n      }\r\n      for (let j = 0; j < questions[i].options.length; j++) {\r\n        if (!questions[i].options[j].trim()) {\r\n          toast.error(`Option ${j + 1} for question ${i + 1} is required`);\r\n          flag = false;\r\n          return;\r\n        }\r\n      }\r\n      if (\r\n        questions[i].correctAnswer === \"\" ||\r\n        questions[i].correctAnswer === null\r\n      ) {\r\n        toast.error(`Correct answer for question ${i + 1} is required`);\r\n        flag = false;\r\n        return;\r\n      }\r\n    }\r\n\r\n    const obj = {\r\n      quizName: quiz.quizName,\r\n      quizType: quiz.quizType,\r\n      questions: questions,\r\n      timer: timer,\r\n    };\r\n    // console.log(obj);\r\n    if (flag === true) {\r\n      setLoading(true);\r\n      try {\r\n        const { data } = await axios.put(\r\n          `${quizServer}/update-quize/${quizTobeUpdate}`,\r\n          obj,\r\n          {\r\n            withCredentials: true,\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n          }\r\n        );\r\n        setLoading(false);\r\n        toast.success(data.message);\r\n        setUpdateQuiz(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.error(\"An error occurred while creating the quiz\");\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.popup_2} onClick={(e) => e.stopPropagation()}>\r\n      <section className={styles.section_1}>\r\n        <div className={styles.circleAndPlus}>\r\n          {Array.from({ length: count }).map((_, index) => (\r\n            <div\r\n              onClick={() => handleClickonCircle(index)}\r\n              key={index}\r\n              className={`${styles.circle} ${\r\n                index === currentIndex ? styles.border : \"\"\r\n              }`}\r\n            >\r\n              {index + 1}\r\n              {count === 1 ? null : (\r\n                <img\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    handleRemoveQuestion(index);\r\n                    handleClickonCircle(Math.max(index - 1, 0));\r\n                  }}\r\n                  src={cross}\r\n                  alt=\"cross img\"\r\n                />\r\n              )}\r\n            </div>\r\n          ))}\r\n          {count >= 5 ? null : (\r\n            <img onClick={handleAddQuestion} src={plus} alt=\"add img\" />\r\n          )}\r\n        </div>\r\n        <span>Max 5 questions</span>\r\n      </section>\r\n      <section className={styles.section_2}>\r\n        <input\r\n          onChange={(e) => {\r\n            const newQuestions = [...questions];\r\n            newQuestions[currentIndex].question = e.target.value;\r\n            setQuestions(newQuestions);\r\n          }}\r\n          value={\r\n            questions[currentIndex] ? questions[currentIndex].question : \"\"\r\n          }\r\n          type=\"text\"\r\n          name=\"poll question\"\r\n          placeholder=\"Poll Question\"\r\n        />\r\n        <div className={styles.optionType}>\r\n          <span>Option Type</span>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"option\"\r\n              value=\"text\"\r\n              checked={questions[currentIndex]?.optionType === \"text\"}\r\n              onChange={() => {\r\n                setCurrentOptiontype(\"text\");\r\n                const newQuestions = [...questions];\r\n                newQuestions[currentIndex].optionType = \"text\";\r\n                setQuestions(newQuestions);\r\n              }}\r\n            />\r\n            <span>Text</span>\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"option\"\r\n              value=\"url\"\r\n              checked={questions[currentIndex]?.optionType === \"url\"}\r\n              onChange={() => {\r\n                setCurrentOptiontype(\"url\");\r\n                const newQuestions = [...questions];\r\n                newQuestions[currentIndex].optionType = \"url\";\r\n                setQuestions(newQuestions);\r\n              }}\r\n            />\r\n            <span>Image URL</span>\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"option\"\r\n              value=\"textandurl\"\r\n              checked={questions[currentIndex]?.optionType === \"textandurl\"}\r\n              onChange={() => {\r\n                setCurrentOptiontype(\"textandurl\");\r\n                const newQuestions = [...questions];\r\n                newQuestions[currentIndex].optionType = \"textandurl\";\r\n                setQuestions(newQuestions);\r\n              }}\r\n            />\r\n            <span>Text & Image URL</span>\r\n          </label>\r\n        </div>\r\n      </section>\r\n\r\n      <section className={styles.section_3}>\r\n        {currentOptionType === \"text\" && (\r\n          <Typetext\r\n            questions={questions}\r\n            setQuestions={setQuestions}\r\n            currentIndex={currentIndex}\r\n          />\r\n        )}\r\n        {currentOptionType === \"url\" && (\r\n          <TypeURL\r\n            questions={questions}\r\n            setQuestions={setQuestions}\r\n            currentIndex={currentIndex}\r\n          />\r\n        )}\r\n        {currentOptionType === \"textandurl\" && (\r\n          <TypetextandURL\r\n            questions={questions}\r\n            setQuestions={setQuestions}\r\n            currentIndex={currentIndex}\r\n          />\r\n        )}\r\n      </section>\r\n\r\n      {quiz && quiz.quizType === \"Q&A\" ? (\r\n        <div className={styles.timer}>\r\n          <span className={styles.text}>Timer</span>\r\n          <span\r\n            style={{\r\n              backgroundColor: timer === 0 ? \"#D60000\" : \"white\",\r\n              color: timer === 0 ? \"white\" : \"#9F9F9F\",\r\n            }}\r\n            onClick={() => setTimer(0)}\r\n          >\r\n            OFF\r\n          </span>\r\n          <span\r\n            style={{\r\n              backgroundColor: timer === 5 ? \"#D60000\" : \"white\",\r\n              color: timer === 5 ? \"white\" : \"#9F9F9F\",\r\n            }}\r\n            onClick={() => setTimer(5)}\r\n          >\r\n            5 sec\r\n          </span>\r\n          <span\r\n            style={{\r\n              backgroundColor: timer === 10 ? \"#D60000\" : \"white\",\r\n              color: timer === 10 ? \"white\" : \"#9F9F9F\",\r\n            }}\r\n            onClick={() => setTimer(10)}\r\n          >\r\n            10 sec\r\n          </span>\r\n        </div>\r\n      ) : null}\r\n\r\n      <section className={styles.section_4}>\r\n        <div className={styles.cancelContinue}>\r\n          <button\r\n            className={styles.cancelbtn}\r\n            onClick={() => setUpdateQuiz(false)}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            disabled={loading}\r\n            className={styles.continuebtn}\r\n            onClick={handleQuizUpdation}\r\n          >\r\n            {loading ? \"Wait...\" : \"Update Quiz\"}\r\n          </button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Updatequiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}